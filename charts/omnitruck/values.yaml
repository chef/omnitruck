# Default values for omnitruck.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# fullnameOverride represents the name of the application which will also be applied to your resources
fullnameOverride: "omnitruck"

image:
  # image.pullPolicy is what kubernetes uses if it does not find the image locally
  pullPolicy: 
  # image.restartPolicy describes in what circumstances the pod will restart
  restartPolicy:
  # image.repository points to the image we want to deploy to the pod
  repository: "chefes/omnitruck"
  # image.tag is the image variant we want to use
  tag: 
  # image.securityContext describes the security context for the specific image
  securityContext:
    # capabilities:
    #   drop:
    #     - ALL
    # readOnlyRootFilesystem: false
    # runAsNonRoot: true
    # runAsUser: 22430
  # image.readinessProbe defines how often Kubernetes will probe the endpoint to check if pod is still running
  readinessProbe:
    httpGet:
      path: /_status
      port: 8080
    periodSeconds: 60
  # image.livenessProbe defines how often Kubernetes will probe the endpoint to check if pod is still running
  livenessProbe:
    httpGet:
      path: /_healthz
      port: 8080
    periodSeconds: 60
  
  # defines a lifecycle for the container
  lifecycle:
  #  preStop:
  #    exec:
  #      command:
  #        - sleep
  #        - "10"

serviceAccount:
  # serviceAccount.create specifies whether a ServiceAccount should be created
  create: true
  # serviceAccount.name is the service account omnitruck will use
  name:

service:
  # service.type defines the type of service being deployed
  type: "ClusterIP"
  # service.port defines where the service will accessible
  port:
  # service.protocol defines the IP protocol for the port
  protocol: 

autoscaling:
  # autoscaling.minReplicas describes the min number of nodes that will be deployed
  minReplicas: 1
  # autoscaling.maxReplicas describes the max number of nodes that the app will scale to
  maxReplicas: 4
  # autoscaling.targetCPUUtilization decribes the target as a percentage that each node can reach before scaling
  targetCPUUtilization:

# describes the resources needed by the container
resources:
#  requests:
#    cpu: 250m
#    memory: 256Mi
#  limits:
#    cpu: 2000m
#    memory: 6Gi

affinity:
#  podAntiAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#      - labelSelector:
#          matchExpressions:
#            - key: "app.kubernetes.io/name"
#              operator: In
#              values:
#                - omnitruck-primary
#        topologyKey: "kubernetes.io/hostname"

ingress:
  # ingress.create specifies whether an ingress should be created
  enable: false
  # ingress.className desribes the name of the ingress class cluster resource
  className: 

#cronSchedule defines how fast we should run the poller
cronSchedule: 

redis:
  # redis.enabled will setup redis as the default data store
  enabled: true
  # architecture: standalone
  # auth:
  #   enabled: false
