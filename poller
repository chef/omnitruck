#! /usr/bin/env ruby

require 'yajl'
require 'yaml'
require 'optparse'

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), 'lib'))

require 'chef/cache'
require 'chef/version'

class Poller
  attr_reader :config

  def initialize
    @options = {}

    optparse = OptionParser.new do |opts|
      opts.banner = "Usage: #{$0} -e <environment>"

      opts.on_tail('-h', '--help', 'Print this help message') do
        puts opts
        exit
      end
      opts.on('-e ENVIRONMENT',
              "Specify this application's environment - REQUIRED") do |e|
        @options[:environment] = e
      end
    end
    optparse.parse!

    @options[:config] = "./config/config.yml"

    required = [:environment, :config]
    missing = required.select { |opt| @options[opt].nil? }
    unless missing.empty?
      puts "[ERROR] Missing required options: #{missing.join(', ')}"
      puts optparse
      exit 1
    end

    unless File.exists?(@options[:config])
      puts "[ERROR] Config file could not be found at #{@options[:config]}"
      puts optparse
      exit 1
    end

    @config = YAML.load_file(@options[:config])[@options[:environment]]
  end

  def run
    Chef::Cache.new(config['metadata_dir'], config["unified_backend"]).update
  end
end

if $0 == __FILE__
  Poller.new.run
end

exit
